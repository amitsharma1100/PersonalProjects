@using Deepwell.Front.Models.User
@model LoginViewModel
@{
    Layout = null;   
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Log In</title>
    <link href="~/Content/css/login.css" rel="stylesheet" />
</head>
<body>
    <div class="login_container">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="login_form">
                <div class="icon">
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="35px"
                         height="35px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
                    <g fill="#fff">
                    <path d="M18,8h-1V6c0-2.76-2.24-5-5-5S7,3.24,7,6v0h2v0c0-1.66,1.34-3,3-3s3,1.34,3,3v2H6c-1.1,0-2,0.9-2,2v10c0,1.1,0.9,2,2,2h12
         			        c1.1,0,2-0.9,2-2V10C20,8.9,19.1,8,18,8z M18,20H6V10h12V20z" />

                    <path d="M12,17c1.1,0,2-0.9,2-2c0-1.1-0.9-2-2-2c-1.1,0-2,0.9-2,2C10,16.1,10.9,17,12,17z" />

         	        </g>
                 </svg>
                </div>

                <h1 class="heading">Welcome back! Please login.</h1>

                <div class="controls">
                    <p>
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email)
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </p>
                    <p>
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password)
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    </p>
                    <p>
                        @Html.LabelFor(m => m.LocationSelected)
                        @Html.DropDownListFor(m => m.LocationSelected, Model.Locations, "Select Location")
                        @Html.ValidationMessageFor(m => m.LocationSelected, "", new { @class = "text-danger" })
                    </p>
                    <div class="ctrl_group">
                        <input type="submit" value="Login" class="btn">
                        @Html.ActionLink("Reset Password", "ForgotPassword")
                    </div>
                    <p>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger", @style = "color:red" })
                    </p>
                </div>
            </div><!--/.login_form-->
        }
        <div class="info"></div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>
