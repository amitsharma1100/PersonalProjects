@model Deepwell.Front.Models.Product.AddMudProductViewModel

@{
    ViewBag.Title = "MudProduct";
}

<div class="container">
    <div class="main_heading">
        <h1 class="">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path d="M19,12h-2v3h-3v2h5V12z M7,9h3V7H5v5h2V9z M21,3H3C1.9,3,1,3.9,1,5v14c0,1.1,0.9,2,2,2h18c1.1,0,2-0.9,2-2V5C23,3.9,22.1,3,21,3z M21,19.01H3V4.99h18V19.01z" />
            </svg>

            Add Mud Product
        </h1>

        <div class="right_btns">
            <a href="@Url.Action("ManageProducts", "Product")" class="link_btn">
                All Products
            </a>
        </div>
    </div>

    <div class="tab_form">
        <ul class="tabs">
            <li class="active" data-panel="product_information">Product Information</li>
        </ul>

        <div class="form_pnl_a">
            <div>
                <p>
                    @ViewBag.Message
                </p>
            </div>

            <div id="product_information" class="tab_content active">
                @using (Html.BeginForm("MudProduct", "Product", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form_panel_g">
                        <div class="divider_hd">
                            <span class="txt">Product Detail</span>
                        </div>

                        <div class="row">
                            <div class="col col_25 pd_both">
                                <div class="ctrl_group">
                                    @Html.LabelFor(model => model.MudProductId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @if (Model.IsEditMode)
                                    {
                                        <div class="static_val">@Model.MudProductId</div>
                                        @Html.HiddenFor(m => Model.MudProductId)
                                    }
                                </div>
                            </div>

                            <div class="col col_25 pd_both">
                                <div class="ctrl_group">
                                    @Html.LabelFor(model => model.ProductType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="static_val">@Model.ProductType</div>
                                </div>
                            </div>

                            <div class="col col_25 pd_both">
                                <div class="ctrl_group">
                                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col col_25 pd_both">
                                <div class="ctrl_group">
                                    @*@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <label>&nbsp;</label>

                                    <div class="checkbox" style="position: relative; top: 10px;">
                                        <label class="toggler">
                                            <span class="text">Taxable</span>
                                            @Html.CheckBoxFor(model => model.IsActive, htmlAttributes: new { @checked = true })
                                            <span class="checkbox--control"></span>
                                        </label>
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="clr"></div>

                        </div><!--/.row-->

                        <div class="clr_ht" style="height: 10px;"></div>

                    </div>

                    <div class="clr_ht" style="height: 10px;"></div>
                    <div class="divider_hd">
                        <span class="txt">Add or Remove Components</span>
                    </div>
                    <div class="row">
                        <div class="pd_both">
                            <div>
                                @Html.ListBoxFor(model => model.SelectedProductIds, Model.Products, new { size = 10 })
                                @Html.ValidationMessageFor(model => model.SelectedProductIds, "", new { @class = "text-danger" })
                                <span id="spnProductsMessage" class="text-danger" style="display:none;color:red;">Please select at least one component.</span>
                            </div>
                        </div>
                    </div>

                    <div class="clr_ht" style="height: 30px;"></div>

                    if (Model.IsEditMode)
                    {
                        var counter = 1;
                        <div class="clr_ht" style="height: 10px;"></div>
                        <div class="divider_hd">
                            <span class="txt">Existing Component Detail</span>
                        </div>

                        <div class="row">
                            <div class="table_panel">
                                <table>
                                    <thead>
                                        <tr>
                                            <td>
                                                SNo
                                            </td>
                                            <td>
                                                <span>Product Number</span>
                                            </td>
                                            <td>
                                                <span>Product Name</span>
                                            </td>
                                        </tr>
                                    </thead>
                                    @foreach (var item in Model.SelectedProducts)
                                    {
                                        <tr class="activated_row">
                                            <td>
                                                @(counter++)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ProductNumber)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ProductName)
                                            </td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        </div>

                    }

                    <div class="clr_ht" style="height: 10px;"></div>
                    <div class="btn_pnl">
                        <input id="btnSave" type="submit" value="Save" class="link_btn" />
                        <a href="@Url.Action("ManageProducts", "Product")" class="link_btn faded">Cancel</a>
                    </div>
                }
            </div><!--/.product_information-->
        </div><!--/.form_pnl_a-->
    </div><!--/.tab_form-->
</div><!--/.container-->

<link href="~/Content/css/sol.css" rel="stylesheet" type="text/css" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mudProductAddEdit")
}

