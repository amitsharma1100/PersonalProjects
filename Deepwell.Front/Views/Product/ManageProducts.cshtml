@model Deepwell.Front.Models.Product.ProductSearchViewModel

@{
    ViewBag.Title = "ManageProducts";
}

<div class="container">
    <div class="main_heading">
        <h1 class="">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                <path d="M19,12h-2v3h-3v2h5V12z M7,9h3V7H5v5h2V9z M21,3H3C1.9,3,1,3.9,1,5v14c0,1.1,0.9,2,2,2h18c1.1,0,2-0.9,2-2V5C23,3.9,22.1,3,21,3z M21,19.01H3V4.99h18V19.01z" />
            </svg>
            Manage Products
        </h1>

        <div class="top_msgs" style="color:green">
            <h4>@ViewBag.Message</h4>
        </div>

        <div class="right_btns">
            @if (Model.IsAdministrator)
            {
                <a href="javascript:void(0)" class="link_btn" data-role="popup" data-target="add_new_product_popup">Add New Product</a>
            }
        </div>
    </div>

    <div class="r_wrapper">
        <div class="ctrl_panel">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger", @style = "color:red" })
                    <div class="col col_25 pd_both">
                        <div class="ctrl_group">
                            @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col col_25 pd_both">
                        <div class="ctrl_group">
                            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col col_25 pd_both">
                        <div class="ctrl_group">
                            @Html.LabelFor(model => model.IsActiveOptions, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownListFor(m => m.IsActiveOptions, Model.IsActiveOptions, new { @class = "dropdown" })
                        </div>
                    </div>

                    <div class="col col_25 pd_both">
                        <div class="ctrl_group">
                            @Html.LabelFor(model => model.ProductType, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownListFor(m => m.ProductType, Model.ProductType, new { @class = "dropdown" })
                        </div>
                    </div>

                    <div class="btn_ftr">
                        <input type="button" id="Search" value="Search" class="btn blue_btn" />
                        <input type="button" id="Reset" value="Reset" class="btn grey_btn" />
                    </div>
                </div>
            }
        </div><!--/.ctrl_panel-->

        <div id="productsData"
             data-searchurl=@Url.Action("Search", "Product")
             data-deleteproducturl=@Url.Action("Delete", "Product") />
        <div id="searchResults"></div>
    </div><!--/.r_wrapper-->
</div><!--/.container-->



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/product")
}
